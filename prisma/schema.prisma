generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Venue {
  id        String   @id @default(cuid())
  name      String   @unique
  url       String
  description String?
  gMapsUrl  String?
  updatedAt DateTime @updatedAt @map("updated_at")
  events    Event[]
  hide      Boolean   @default(false)
  thumbnail  String?
  streetAddress String?
  addressLocality String?
  postalCode String?
  addressRegion String?
  addressCountry String?
  slug      String   @unique

  @@map("venues")
}

model ArtistProfile {
  id          String   @id @default(cuid())
  name        String   @unique
  website     String?
  spotifyTopTrack     String?
  instagram   String?
  youtubeUrls String[]
  biography   String?
  updatedAt   DateTime @updatedAt @map("updated_at")
  events      Event[]
  appleMusicPreviews AppleMusicPreview[]

  @@map("artist_profiles")
}

model AppleMusicPreview {
  id            String        @id @default(cuid())
  artistName    String
  trackName     String
  previewUrl    String
  appleMusicUrl String
  artworkUrl    String
  updatedAt     DateTime      @updatedAt @map("updated_at")
  artistProfile ArtistProfile @relation(fields: [artistProfileId], references: [id])
  artistProfileId String

  @@map("apple_music_previews")
}

model Performer {
  id         String           @id @default(cuid())
  name       String
  instrument String
  updatedAt  DateTime         @updatedAt @map("updated_at")
  events     EventPerformer[]

  @@unique([name, instrument])
  @@map("performers")
}

model EventPerformer {
  eventId     String
  performerId String
  updatedAt   DateTime  @updatedAt @map("updated_at")
  event       Event     @relation(fields: [eventId], references: [id])
  performer   Performer @relation(fields: [performerId], references: [id])

  @@id([eventId, performerId])
  @@map("event_performers")
}

model Event {
  id         String           @id @default(cuid())
  name       String
  url        String
  logline    String?
  dateString String
  setTimes   String[]
  venueId    String
  artistId   String?
  updatedAt  DateTime         @updatedAt @map("updated_at")
  performers EventPerformer[]
  artist     ArtistProfile?   @relation(fields: [artistId], references: [id])
  venue      Venue            @relation(fields: [venueId], references: [id])
  slug      String   @unique

  @@unique([name, dateString, venueId])
  @@map("events")
}
